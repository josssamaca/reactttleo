{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ELjodidoReact\\\\src\\\\productos\\\\component\\\\Granapi.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/React.createContext();\n\nconst ThemeProvider = props => {\n  _s();\n\n  const themes = {\n    color: '#000',\n    background: '#eee'\n  };\n  const [theme, setTheme] = React.useState(themes);\n  React.useEffect(() => {\n    if (localStorage.getItem('LocalTheme')) {\n      const LocalTheme = JSON.parse(localStorage.getItem('LocalTheme'));\n      setTheme(LocalTheme);\n    }\n  }, []);\n\n  const cambiarColor = valor => {\n    setTheme(valor);\n    localStorage.setItem('LocalTheme', JSON.stringify(valor));\n    console.log(valor);\n    console.log('color guardado');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      cambiarColor\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"ViM1x9SETHiwC7VtWvt593bNAJ0=\");\n\n_c = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/xampp/htdocs/ELjodidoReact/src/productos/component/Granapi.js"],"names":["React","ThemeContext","createContext","ThemeProvider","props","themes","color","background","theme","setTheme","useState","useEffect","localStorage","getItem","LocalTheme","JSON","parse","cambiarColor","valor","setItem","stringify","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,gBAAGD,KAAK,CAACE,aAAN,EAArB;;AAEP,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,UAAU,EAAE;AAFD,GAAf;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAeL,MAAf,CAA1B;AAEAL,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AAClB,QAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAH,EAAsC;AAClC,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAnB;AACAJ,MAAAA,QAAQ,CAACK,UAAD,CAAR;AACH;AACJ,GALD,EAKG,EALH;;AAOA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5BT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeF,KAAf,CAAnC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GALD;;AAOA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACd,MAAAA,KAAD;AAAQS,MAAAA;AAAR,KAA9B;AAAA,cACKb,KAAK,CAACmB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD;;GAAMpB,a;;KAAAA,a;AA8BN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nconst ThemeProvider = (props) => {\r\n  \r\n    const themes = {\r\n        color: '#000',\r\n        background: '#eee'\r\n    }\r\n    \r\n    const [theme, setTheme] = React.useState(themes)\r\n\r\n    React.useEffect(() => {\r\n        if(localStorage.getItem('LocalTheme')){\r\n            const LocalTheme = JSON.parse(localStorage.getItem('LocalTheme'))\r\n            setTheme(LocalTheme)\r\n        }\r\n    }, [])\r\n    \r\n    const cambiarColor = (valor) => {\r\n        setTheme(valor)\r\n        localStorage.setItem('LocalTheme', JSON.stringify(valor))\r\n        console.log(valor)\r\n        console.log('color guardado')\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{theme, cambiarColor}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeProvider"]},"metadata":{},"sourceType":"module"}